#!/usr/bin/env bash

install_docker() {
    command -v docker >/dev/null 2>&1 || {
        echo "attempting to install docker"
        curl -fsSL "https://get.docker.com/" | bash
        echo "docker installed"
    }
}

install_docker_compose() {
    command -v docker-compose >/dev/null 2>&1 || {
        echo "attempting to install docker compose"
        curl -L "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        echo "docker compose installed"
    }
}

write_docker_compose_file() {
    echo "writing docker-compose file for drone.io"
    cat > /etc/drone/docker-compose.yml << EOF
version: '3.1'

services:
  drone-server:
    image: drone/drone:${DRONE_IO_VERSION}
    ports:
      - 80:8000
    volumes:
      - ./drone:/var/lib/drone
    restart: always
    environment:
      - DRONE_OPEN=true
      - DRONE_GITHUB=true
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}

  drone-agent:
    image: drone/drone:${DRONE_IO_VERSION}
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker/sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=${DRONE_SECRET}
EOF
}

boot() {
    echo "running drone.io..."
    docker-compose -f /etc/drone/docker-compose.yml up -d
}

install_docker
install_docker_compose
write_docker_compose_file
boot
